---
- hosts: multi
  become: true

  vars:
    apache_service_name: "{{ 'apache2' if ansible_facts['os_family'] == 'Debian' else 'httpd' }}"
    apache_restart_handler: "{{ 'restart apache ubuntu' if ansible_facts['os_family'] == 'Debian' else 'restart apache centos' }}"

  handlers:
    - name: restart apache centos
      shell: /usr/sbin/"{{ apache_service }}" -k restart
      when: ansible_distribution == "CentOS"

    - name: restart apache ubuntu
      service:
        name: "{{ apache_service }}"
        state: restarted
      when: ansible_distribution == "Ubuntu"


  pre_tasks:
  - debug: msg=ansible_os_family
  - name: Load variable files
    include_vars: "{{ item }}"
    with_first_found:
      - "apache_{{ ansible_os_family }}.yml"
      - "apache_default.yml"


  tasks:
  - name: Add a line to a file
    lineinfile:
      dest: "{{ apache_config_dir }}"
      regexp: '^ServerAdmin'
      line: 'ServerAdmin root@root.com'

  - name: Ensure Apache is installed
    package:
      name: "{{ apache_package }}"
      state: present
    register: foo

  - debug: var=foo

  - name: Copy config file
    copy:
      src: "{{ src_file }}"
      dest: "{{ apache_config_dir }}"
      group: root
      owner: root
      mode: 0644
    notify: "{{ apache_restart_handler }}"

  - name: Ensure Apache is started now and at boot (CentOS)
    command: "{{ item }}"
    with_items:
      - "/usr/sbin/{{ apache_service }}"
    when: ansible_distribution == "CentOS"

  - name: Ensure Apache is started now and at boot (Ubuntu)
    ansible.builtin.service:
      name: "{{ apache_service }}"
      state: started
      enabled: yes
    ignore_errors: yes
    when: ansible_distribution == "Ubuntu"
